[05/16 18:22:09      0s] 
[05/16 18:22:09      0s] Cadence Innovus(TM) Implementation System.
[05/16 18:22:09      0s] Copyright 2017 Cadence Design Systems, Inc. All rights reserved worldwide.
[05/16 18:22:09      0s] 
[05/16 18:22:09      0s] Version:	v17.12-s095_1, built Thu Nov 9 12:10:01 PST 2017
[05/16 18:22:09      0s] Options:	-no_gui 
[05/16 18:22:09      0s] Date:		Sat May 16 18:22:09 2020
[05/16 18:22:09      0s] Host:		aduae260-lap (x86_64 w/Linux 2.6.32-754.14.2.el6.x86_64) (16cores*128cpus*Intel(R) Xeon(R) CPU E5-4660 v4 @ 2.20GHz 40960KB)
[05/16 18:22:09      0s] OS:		CentOS release 6.10 (Final)
[05/16 18:22:09      0s] 
[05/16 18:22:09      0s] License:
[05/16 18:22:10      0s] 		invs	Innovus Implementation System	17.1	checkout succeeded
[05/16 18:22:10      0s] 		8 CPU jobs allowed with the current license(s). Use setMultiCpuUsage to set your required CPU count.
[05/16 18:22:23     13s] @(#)CDS: Innovus v17.12-s095_1 (64bit) 11/09/2017 12:10 (Linux 2.6.18-194.el5)
[05/16 18:22:23     13s] @(#)CDS: NanoRoute 17.12-s095_1 NR171102-1913/17_12-UB (database version 2.30, 405.7.1) {superthreading v1.44}
[05/16 18:22:23     13s] @(#)CDS: AAE 17.12-s040 (64bit) 11/09/2017 (Linux 2.6.18-194.el5)
[05/16 18:22:23     13s] @(#)CDS: CTE 17.12-s036_1 () Nov  2 2017 09:33:40 ( )
[05/16 18:22:23     13s] @(#)CDS: SYNTECH 17.12-s012_1 () Oct 31 2017 04:30:11 ( )
[05/16 18:22:23     13s] @(#)CDS: CPE v17.12-s076
[05/16 18:22:23     13s] @(#)CDS: IQRC/TQRC 16.1.1-s220 (64bit) Fri Aug  4 09:53:48 PDT 2017 (Linux 2.6.18-194.el5)
[05/16 18:22:23     13s] @(#)CDS: OA 22.50-p063 Fri Feb  3 19:45:13 2017
[05/16 18:22:23     13s] @(#)CDS: SGN 10.10-p124 (19-Aug-2014) (64 bit executable)
[05/16 18:22:23     13s] @(#)CDS: RCDB 11.10
[05/16 18:22:23     13s] --- Running on aduae260-lap (x86_64 w/Linux 2.6.32-754.14.2.el6.x86_64) (16cores*128cpus*Intel(R) Xeon(R) CPU E5-4660 v4 @ 2.20GHz 40960KB) ---
[05/16 18:22:23     13s] Create and set the environment variable TMPDIR to /tmp/innovus_temp_9281_aduae260-lap_as9397_Oqlwal.

[05/16 18:22:23     13s] Change the soft stacksize limit to 0.2%RAM (1550 mbytes). Set global soft_stack_size_limit to change the value.
[05/16 18:22:23     13s] 
[05/16 18:22:23     13s] **INFO:  MMMC transition support version v31-84 
[05/16 18:22:23     13s] 
[05/16 18:22:23     13s] <CMD> set_global _enable_mmmc_by_default_flow      $CTE::mmmc_default
[05/16 18:22:23     13s] <CMD> suppressMessage ENCEXT-2799
[05/16 18:22:27     13s] <CMD> man addRing
[05/16 18:22:40     13s] <CMD> man addRing
[05/16 18:26:17     13s] <CMD> man setDesignMode
[05/16 18:27:23     13s] <CMD> man globalNetConnect
[05/16 18:30:08     13s] <CMD> man sroute
[05/16 18:34:11     13s] <CMD> man setPlaceMode
[05/16 18:36:53     13s] <CMD> setPlaceMode -help
[05/16 18:36:53     13s] 
[05/16 18:36:53     13s] Usage: setPlaceMode [-help] [-reset] [-activity_power_driven {false|true}] [-activity_power_driven_effort {none|standard|high}]
[05/16 18:36:53     13s]                     [-place_design_floorplan_mode {true|false}] [-place_design_refine_place {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_allow_border_pin_abut {true|false}] [-place_detail_check_cut_spacing {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_check_inst_space_group {true|false}] [-place_detail_check_route {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_color_aware_legal {true|false}] [-place_detail_context_aware_legal {none|all|optional|required|user}]
[05/16 18:36:53     13s]                     [-place_detail_eco_max_distance <micron>] [-place_detail_eco_priority_insts {placed|fixed|eco}]
[05/16 18:36:53     13s]                     [-place_detail_fixed_shifter {true|false}] [-place_detail_honor_inst_pad {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_io_pin_blockage {true|false}] [-place_detail_irdrop_aware_effort {none|low|medium|high}]
[05/16 18:36:53     13s]                     [-place_detail_legalization_inst_gap <site>] [-place_detail_max_shifter_column_depth <value>]
[05/16 18:36:53     13s]                     [-place_detail_max_shifter_depth <value>] [-place_detail_max_shifter_row_depth <value>]
[05/16 18:36:53     13s]                     [-place_detail_no_filler_without_implant {true|false}] [-place_detail_pad_fixed_insts {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_preroute_as_obs {layerNum ...}] [-place_detail_preserve_routing {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_remove_affected_routing {true|false}] [-place_detail_swap_eeq_cells {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_use_check_drc {true|false}] [-place_detail_use_GA_filler_groups {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_use_no_diffusion_one_site_filler {true|false}]
[05/16 18:36:53     13s]                     [-place_detail_wire_length_opt_effort {none|medium|high|extreme}]
[05/16 18:36:53     13s]                     [-place_global_auto_blockage_in_channel {none|soft|partial}] [-place_global_clock_gate_aware {true|false}]
[05/16 18:36:53     13s]                     [-place_global_clock_power_driven {true|false}] [-place_global_clock_power_driven_effort {none|standard|high}]
[05/16 18:36:53     13s]                     [-place_global_cong_effort {low|medium|high|auto}] [-place_global_enable_distributed_place {true|false}]
[05/16 18:36:53     13s]                     [-place_global_group_flop_to_macro {true|false}] [-place_global_group_flop_to_macro_level <value>]
[05/16 18:36:53     13s]                     [-place_global_group_flop_to_macro_list <value>] [-place_global_ignore_scan {true|1|false|0|auto}]
[05/16 18:36:53     13s]                     [-place_global_ignore_spare {true|false}] [-place_global_max_density <value>] [-place_global_module_aware_spare {true|false}]
[05/16 18:36:53     13s]                     [-place_global_module_padding {<module> <factor>}] [-place_global_place_io_pins {true|false}]
[05/16 18:36:53     13s]                     [-place_global_reorder_scan {true|false}] [-place_global_soft_guide_strength {low|medium|high}]
[05/16 18:36:53     13s]                     [-place_global_timing_effort {medium|high}] [-place_global_uniform_density {false|true}] [-place_hard_fence {true|false}]
[05/16 18:36:53     13s]                     [-place_opt_post_place_tcl <string>] [-place_opt_run_global_place {none|seed|full}]
[05/16 18:36:53     13s]                     [-place_spare_update_timing_graph {true|false}]
[05/16 18:36:53     13s] 
[05/16 18:36:53     13s] -help                                      # Prints out the command usage
[05/16 18:36:53     13s] -reset                                     # Resets all or specified options to default value
[05/16 18:36:53     13s] -activity_power_driven {false|true}        # identifies and constrains power-critical nets to reduce switching power
[05/16 18:36:53     13s]                                            # (enums={false true}, default=false)
[05/16 18:36:53     13s] -activity_power_driven_effort {none|standard|high}
[05/16 18:36:53     13s]                                            # -activity_power_driven_effort mode
[05/16 18:36:53     13s]                                            # (enums={none standard high}, default=standard)
[05/16 18:36:53     13s] -place_design_floorplan_mode {true|false}
[05/16 18:36:53     13s]                                            # run placement in floorplan mode (bool, default=false)
[05/16 18:36:53     13s] -place_design_refine_place {true|false}    # if set to false, calls to refinePlace from other apps (such as placeDesign, optDesign) will not run
[05/16 18:36:53     13s]                                            # refinePlace (bool, default=true)
[05/16 18:36:53     13s] -place_detail_allow_border_pin_abut {true|false}
[05/16 18:36:53     13s]                                            # allow instance abut with its neighbors when it has pins near by the cell boundary (bool, default=false)
[05/16 18:36:53     13s] -place_detail_check_cut_spacing {true|false}
[05/16 18:36:53     13s]                                            # Check via cut spacing during DRC checking
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_check_inst_space_group {true|false}
[05/16 18:36:53     13s]                                            # check inst space group (bool, default=false)
[05/16 18:36:53     13s] -place_detail_check_route {true|false}     # do DRV checks against FIXED wires during legalization, along with preroutes (bool, default=false)
[05/16 18:36:53     13s] -place_detail_color_aware_legal {true|false}
[05/16 18:36:53     13s]                                            # enable adjacent cell color conflict check in legalization (bool, default=false)
[05/16 18:36:53     13s] -place_detail_context_aware_legal {none|all|optional|required|user}
[05/16 18:36:53     13s]                                            # specify the types of cell context rules the placer needs to honor. The argument values [optional,
[05/16 18:36:53     13s]                                            # required, user] can be used separately or combined, but they are exclusive to all | none
[05/16 18:36:53     13s]                                            # (default=all) (enums={none all optional required user}_list, default=all)
[05/16 18:36:53     13s] -place_detail_eco_max_distance <micron>    # specify max distance (in micron) for refinePlace ECO mode (float, default=0, min=0, max=9999)
[05/16 18:36:53     13s] -place_detail_eco_priority_insts {placed|fixed|eco}
[05/16 18:36:53     13s]                                            # select instance priority for refinePlace ECO mode (enums={placed fixed eco}, default=placed)
[05/16 18:36:53     13s] -place_detail_fixed_shifter {true|false}
[05/16 18:36:53     13s]                                            # mark shifters FIXED once placed (bool, default=false)
[05/16 18:36:53     13s] -place_detail_honor_inst_pad {true|false}
[05/16 18:36:53     13s]                                            # honor padding from specifyInstPad in detail placement
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_io_pin_blockage {true|false}
[05/16 18:36:53     13s]                                            # ioPins from top-level are treated as pre-routes during DRV checks     in legalization (bool, default=false)
[05/16 18:36:53     13s] -place_detail_irdrop_aware_effort {none|low|medium|high}
[05/16 18:36:53     13s]                                            # selects which IR drop optimization effort level to use during refinePlace (enums={none low medium high}, default=none)
[05/16 18:36:53     13s] -place_detail_legalization_inst_gap <site>
[05/16 18:36:53     13s]                                            # minimum gap between instances (unit sites)
[05/16 18:36:53     13s]                                            # (int, default=0)
[05/16 18:36:53     13s] -place_detail_max_shifter_column_depth <value>
[05/16 18:36:53     13s]                                            # maximum distance from vertical power domain boundary that a shifter can be placed (float, default=9999)
[05/16 18:36:53     13s] -place_detail_max_shifter_depth <value>    # maximum distance from a horizontal or vertical power domain bounary that a shifter can be placed
[05/16 18:36:53     13s]                                            # (float, default=9999)
[05/16 18:36:53     13s] -place_detail_max_shifter_row_depth <value>
[05/16 18:36:53     13s]                                            # maximum distance from a horizontal power domain bounary that a shifter can be placed (float, default=9999)
[05/16 18:36:53     13s] -place_detail_no_filler_without_implant {true|false}
[05/16 18:36:53     13s]                                            # there is no cell which  has no implant obs
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_pad_fixed_insts {true|false}
[05/16 18:36:53     13s]                                            # honor cell-padding for FIXED instances in refinePlace
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_preroute_as_obs {layerNum ...}
[05/16 18:36:53     13s]                                            # specify layers on which preroute are taken as OBS
[05/16 18:36:53     13s]                                            # (string, default="")
[05/16 18:36:53     13s] -place_detail_preserve_routing {true|false}
[05/16 18:36:53     13s]                                            # do not delete routed wires during refinePlace
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_remove_affected_routing {true|false}
[05/16 18:36:53     13s]                                            # delete only wires whose nets were touched due to moved cells (bool, default=false)
[05/16 18:36:53     13s] -place_detail_swap_eeq_cells {true|false}
[05/16 18:36:53     13s]                                            # replace master cells by its EEQ cell during legalization, to keep max-dist move low (bool, default=false)
[05/16 18:36:53     13s] -place_detail_use_check_drc {true|false}
[05/16 18:36:53     13s]                                            # Use FGC based DRC engine in legalization
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_detail_use_GA_filler_groups {true|false}
[05/16 18:36:53     13s]                                            # filler cell insts will only be replaced by logic insts that belong to same GA groups. (bool, default=false)
[05/16 18:36:53     13s] -place_detail_use_no_diffusion_one_site_filler {true|false}
[05/16 18:36:53     13s]                                            # override -fillerGapMinGap to 0 and all source-drain spacing rule to 1 site during legalizing (bool, default=false)
[05/16 18:36:53     13s] -place_detail_wire_length_opt_effort {none|medium|high|extreme}
[05/16 18:36:53     13s]                                            # selects which wire-length optimization effort level to use during refinePlace (enums={none medium high extreme}, default=medium)
[05/16 18:36:53     13s] -place_global_auto_blockage_in_channel {none|soft|partial}
[05/16 18:36:53     13s]                                            # Placement will (temporarily) block channels between areas with limited routing capacity (enums={none soft partial}, default=none)
[05/16 18:36:53     13s] -place_global_clock_gate_aware {true|false}
[05/16 18:36:53     13s]                                            # find better placement for clock gating elements towards the center of gravity for fanout (bool, default=true)
[05/16 18:36:53     13s] -place_global_clock_power_driven {true|false}
[05/16 18:36:53     13s]                                            # clock power driven (bool, default=false)
[05/16 18:36:53     13s] -place_global_clock_power_driven_effort {none|standard|high}
[05/16 18:36:53     13s]                                            # -place_global_clock_power_driven_effort mode (enums={none standard high}, default=standard)
[05/16 18:36:53     13s] -place_global_cong_effort {low|medium|high|auto}
[05/16 18:36:53     13s]                                            # level of effort for congestion driven global placer (enums={low medium high auto}, default=auto)
[05/16 18:36:53     13s] -place_global_enable_distributed_place {true|false}
[05/16 18:36:53     13s]                                            # enable distributed placement platform
[05/16 18:36:53     13s]                                            # (bool, default=false)
[05/16 18:36:53     13s] -place_global_group_flop_to_macro {true|false}
[05/16 18:36:53     13s]                                            # group flops to Macro (bool, default=false)
[05/16 18:36:53     13s] -place_global_group_flop_to_macro_level <value>
[05/16 18:36:53     13s]                                            # groupFlopToMacroLevel value
[05/16 18:36:53     13s]                                            # (int, default=1, min=0, max=99)
[05/16 18:36:53     13s] -place_global_group_flop_to_macro_list <value>
[05/16 18:36:53     13s]                                            # List of macros for which nets connecting to them will be pulled to macros (string, default="")
[05/16 18:36:53     13s] -place_global_ignore_scan {true|1|false|0|auto}
[05/16 18:36:53     13s]                                            # ignore scan net during placement
[05/16 18:36:53     13s]                                            # (enums={true 1 false 0 auto}, default=true)
[05/16 18:36:53     13s] -place_global_ignore_spare {true|false}    # discard spare cell connections during global placement (bool, default=false)
[05/16 18:36:53     13s] -place_global_max_density <value>          # placement strives to not let density exceed given value, in any part of design (float, default=-1)
[05/16 18:36:53     13s] -place_global_module_aware_spare {true|false}
[05/16 18:36:53     13s]                                            # Spare insts are placed randomly along with the containing module's insts (bool, default=false)
[05/16 18:36:53     13s] -place_global_module_padding {<module> <factor>}
[05/16 18:36:53     13s]                                            # define the padding factor for the given module to reduce the local density and congestion (string, default="")
[05/16 18:36:53     13s] -place_global_place_io_pins {true|false}
[05/16 18:36:53     13s]                                            # place IO Pins concurrently with std.cell placement, and do layer assignment (bool, default=false)
[05/16 18:36:53     13s] -place_global_reorder_scan {true|false}    # turn on reorder scan during placement (bool, default=true)
[05/16 18:36:53     13s] -place_global_soft_guide_strength {low|medium|high}
[05/16 18:36:53     13s]                                            # level of effort for user definded softGuide for global placer (enums={low medium high}, default=low)
[05/16 18:36:53     13s] -place_global_timing_effort {medium|high}
[05/16 18:36:53     13s]                                            # level of effort for timing driven global placer
[05/16 18:36:53     13s]                                            # (enums={medium high}, default=medium)
[05/16 18:36:53     13s] -place_global_uniform_density {false|true}
[05/16 18:36:53     13s]                                            # enable even cell distribution for designs with less than 70% utilization (enums={false true}, default=false)
[05/16 18:36:53     13s] -place_hard_fence {true|false}             # honor fence and region constraints in refinePlace (bool, default=true)
[05/16 18:36:53     13s] -place_opt_post_place_tcl <string>         # a tcl script to be sourced after initial placement and before preCTS optimization in
[05/16 18:36:53     13s]                                            # place_opt_design (string, default="")
[05/16 18:36:53     13s] -place_opt_run_global_place {none|seed|full}
[05/16 18:36:53     13s]                                            # place opt run global place
[05/16 18:36:53     13s]                                            # (enums={none seed full}, default=full)
[05/16 18:36:53     13s] -place_spare_update_timing_graph {true|false}
[05/16 18:36:53     13s]                                            # update timing graph during placeSpareModule
[05/16 18:36:53     13s]                                            # (bool, default=true)
[05/16 18:37:54     14s] <CMD> man place_opt_design
[05/16 18:39:30     14s] <CMD> man checkPlace
[05/16 18:40:08     14s] <CMD> man trialRoute
[05/16 18:40:17     14s] 
[05/16 18:40:17     14s] Usage: trialRoute [-help] [-PDAwareSelNet] [-PDLengthThresholdX <float>] [-PDLengthThresholdY <float>] [-PDNoAwareSelNet] [-autoSkipTracks]
[05/16 18:40:17     14s]                   [-blockageCostMultiple <multiple>] [-clkNetRoutingDemandInTracks <integer>] [-dontUseM1WireStrictly]
[05/16 18:40:17     14s]                   [-excludePartitionFile <file>] [-extendM1PinToM2] [-fastRouteForPinAssign] [-floorPlanMode] [-gcellSize {spec}]
[05/16 18:40:17     14s]                   [-gcellSizeX <multiplier>] [-gcellSizeY <multiplier>] [-handleClockPreroute] [-handleEachPD] [-handleEachPartition] [-handlePD]
[05/16 18:40:17     14s]                   [-handlePDComplex] [-handlePartFixedNets] [-handlePartition] [-handlePartitionComplex] [-highEffort] [-honorActiveLogicView]
[05/16 18:40:17     14s]                   [-honorPin] [-ignoreBumpNets] [-intraNets] [-maxDetourRatio <ratio>] [-maxRouteLayer {layerIndex | layerName}]
[05/16 18:40:17     14s]                   [-minRouteLayer {layerIndex | layerName}] [-noDetour] [-noObstruct4] [-noPinGuide] [-printSections] [-printWiresOnRTBlk]
[05/16 18:40:17     14s]                   [-printWiresOnRTBlkFile <file>] [-printWiresOnRTBlkLong] [-printWiresOnRTBlkLongFile <file>] [-printWiresOutsideBusguide]
[05/16 18:40:17     14s]                   [-ptnAwareSelNet] [-ptnBdryExt {microns}] [-ptnBdryShr <microns>] [-ptnNoAwareSelNet] [-resetRTBlockage <file>]
[05/16 18:40:17     14s]                   [-routeBasedBBPin] [-routeGuide <file>] [-selMarkedNet] [-selMarkedNetOnly] [-selNet <file>] [-selNetOnly <file>]
[05/16 18:40:17     14s]                   [-skipTracks {spec}] [-useM1]
[05/16 18:40:17     14s] 
[05/16 18:40:17     14s] -help                                      # Prints out the command usage
[05/16 18:40:17     14s] -PDAwareSelNet                             # Route selected nets with power domain handling (bool, optional)
[05/16 18:40:17     14s] -PDLengthThresholdX <float>                # PD max width to allow routes to cross it (float, optional)
[05/16 18:40:17     14s] -PDLengthThresholdY <float>                # PD max height to allow routes to cross it (float, optional)
[05/16 18:40:17     14s] -PDNoAwareSelNet                           # Route unselected nets with power domain handling (bool, optional)
[05/16 18:40:17     14s] -autoSkipTracks                            # SkipTracks automatically based on NDRs (bool, optional)
[05/16 18:40:17     14s] -blockageCostMultiple <multiple>           # Increase cost crossing routing blockage (use with thin blockages) (int, optional, min=1, max=100)
[05/16 18:40:17     14s] -clkNetRoutingDemandInTracks <integer>     # clkNetRoutingDemandInTracks {1-5} (int, optional, min=1, max=5)
[05/16 18:40:17     14s] -dontUseM1WireStrictly                     # strictly avoid using M1 wires (bool, optional)
[05/16 18:40:17     14s] -excludePartitionFile <file>               # Ignore partition names not in file (string, optional)
[05/16 18:40:17     14s] -extendM1PinToM2                           # Extend M1 terms to M2 (bool, optional)
[05/16 18:40:17     14s] -fastRouteForPinAssign                     # Fast route with partitions for PinAssign excluding intra nets (bool, optional)
[05/16 18:40:17     14s] -floorPlanMode                             # Route fast with bigger (4x2) gcell size (bool, optional)
[05/16 18:40:17     14s] -gcellSize {spec}                          # Multipliers for gcell size in X/Y directions like 2x2 (string, optional)
[05/16 18:40:17     14s] -gcellSizeX <multiplier>                   # Multiplier for gcell size in X direction (int, optional, min=1, max=4)
[05/16 18:40:17     14s] -gcellSizeY <multiplier>                   # Multiplier for gcell size in Y direction (int, optional, min=1, max=2)
[05/16 18:40:17     14s] -handleClockPreroute                       # Reroute pre-routed clock nets (bool, optional)
[05/16 18:40:17     14s] -handleEachPD                              # Route each intra-power domain net groups separately (for abutted PDs) (bool, optional)
[05/16 18:40:17     14s] -handleEachPartition                       # Route each intra-partition net groups separately (for abutted partitions) (bool, optional)
[05/16 18:40:17     14s] -handlePD                                  # Handle power domains (default/intra/inter) (bool, optional)
[05/16 18:40:17     14s] -handlePDComplex                           # Handle power domains (default/intra/inter-combinations) (bool, optional)
[05/16 18:40:17     14s] -handlePartFixedNets                       # Finish partial route with FIXED wires (use carefully) (bool, optional)
[05/16 18:40:17     14s] -handlePartition                           # Handle partitions (top/intra/inter) (bool, optional)
[05/16 18:40:17     14s] -handlePartitionComplex                    # Handle partitions (top/intra/interr-combinations) (bool, optional)
[05/16 18:40:17     14s] -highEffort                                # Do more iterations during global routing (bool, optional)
[05/16 18:40:17     14s] -honorActiveLogicView                      # Honor Active Logic View (bool, optional)
[05/16 18:40:17     14s] -honorPin                                  # Honor partiton pins (bool, optional)
[05/16 18:40:17     14s] -ignoreBumpNets                            # ignoreBumpNets (bool, optional)
[05/16 18:40:17     14s] -intraNets                                 # FastRouteForPinAssign including intra partition nets (bool, optional)
[05/16 18:40:17     14s] -maxDetourRatio <ratio>                    # Reroute 2-terms nets with more than given detour ratio after phase 1f
[05/16 18:40:17     14s]                                            # (float, optional, min=1, max=1000)
[05/16 18:40:17     14s] -maxRouteLayer {layerIndex | layerName}    # Set the maximum routing layer (string, optional)
[05/16 18:40:17     14s] -minRouteLayer {layerIndex | layerName}    # Set the minimum routing layer (string, optional)
[05/16 18:40:17     14s] -noDetour                                  # Skip phase 1e/1f (not optimize congestion) (bool, optional)
[05/16 18:40:17     14s] -noObstruct4                               # Don't move blocked terms (bool, optional)
[05/16 18:40:17     14s] -noPinGuide                                # Don't honor pin guides (bool, optional)
[05/16 18:40:17     14s] -printSections                             # Report congestions by dividing 2x2 chip sections (bool, optional)
[05/16 18:40:17     14s] -printWiresOnRTBlk                         # Print wires that overlap routing blockages (bool, optional)
[05/16 18:40:17     14s] -printWiresOnRTBlkFile <file>              # Print wires that overlap routing blockages to given file (string, optional)
[05/16 18:40:17     14s] -printWiresOnRTBlkLong                     # Print only long wires that overlap routing blockages (bool, optional)
[05/16 18:40:17     14s] -printWiresOnRTBlkLongFile <file>          # Print only long wires that overlap routing blockages to given file (string, optional)
[05/16 18:40:17     14s] -printWiresOutsideBusguide                 # Print wires going outside bus guides (bool, optional)
[05/16 18:40:17     14s] -ptnAwareSelNet                            # Route selected nets with partition handling (bool, optional)
[05/16 18:40:17     14s] -ptnBdryExt {microns}                      # Extend partition boundary for routing (int, optional)
[05/16 18:40:17     14s] -ptnBdryShr <microns>                      # Shrink partition boundary for routing (int, optional)
[05/16 18:40:17     14s] -ptnNoAwareSelNet                          # Route unselected nets with partition handling (bool, optional)
[05/16 18:40:17     14s] -resetRTBlockage <file>                    # add/delete blockages temporarily (string, optional)
[05/16 18:40:17     14s] -routeBasedBBPin                           # routeBasedBBPin (bool, optional)
[05/16 18:40:17     14s] -routeGuide <file>                         # Route based on route guides (string, optional)
[05/16 18:40:17     14s] -selMarkedNet                              # Route GUI selected nets first (bool, optional)
[05/16 18:40:17     14s] -selMarkedNetOnly                          # Route GUI selected nets only (bool, optional)
[05/16 18:40:17     14s] -selNet <file>                             # Route selected nets in file first (string, optional)
[05/16 18:40:17     14s] -selNetOnly <file>                         # Route selected nets only (string, optional)
[05/16 18:40:17     14s] -skipTracks {spec}                         # Remove 1 M3 track of 4 temporarily with "M3 1:4" (string, optional)
[05/16 18:40:17     14s] -useM1                                     # Use M1 for routing (bool, optional)
[05/16 18:40:17     14s] 
[05/16 18:40:17     14s] 
[05/16 18:42:28     14s] <CMD> man extractRC
[05/16 19:00:47     14s] <CMD> man extractRC
[05/16 19:05:05     14s] <CMD> man extractRC
[05/16 19:05:21     14s] <CMD> man setNanoRouteMode
[05/16 19:05:50     14s] invalid command name "mansetNanoRouteMode"
[05/16 19:05:55     14s] <CMD> setNanoRouteMode -help
[05/16 19:05:55     14s] 
[05/16 19:05:55     14s] Usage: setNanoRouteMode [-help] [-reset] [-dbAdjustAutoViaWeight {true|false}] [-dbAllowInstanceOverlaps {true|false}]
[05/16 19:05:55     14s]                         [-dbIgnoreFollowPinShape {true|false}] [-dbProcessNode <value>] [-dbRcExtractionCorner <value>]
[05/16 19:05:55     14s]                         [-dbSkipAnalog {true|false}] [-dbViaWeight <value>] [-drouteAntennaEcoListFile <value>] [-drouteAutoStop {true|false}]
[05/16 19:05:55     14s]                         [-drouteEndIteration <value>] [-drouteFixAntenna {true|false}] [-drouteFixViaDensityViolationAfterViaSwap {true|false}]
[05/16 19:05:55     14s]                         [-drouteMaskOnlyOnLayer <value>] [-drouteMinLengthForWireSpreading <value>] [-drouteMinLengthForWireWidening <value>]
[05/16 19:05:55     14s]                         [-drouteMinSlackForWireOptimization <value>] [-drouteNoTaperInLayers <value>] [-drouteNoTaperOnOutputPin <value>]
[05/16 19:05:55     14s]                         [-drouteOnGridOnly <value>] [-droutePostRouteLithoRepair {true|false}] [-droutePostRouteSpreadWire <value>]
[05/16 19:05:55     14s]                         [-droutePostRouteSwapVia <value>] [-droutePostRouteSwapViaPriority <value>] [-droutePostRouteWidenWire <value>]
[05/16 19:05:55     14s]                         [-droutePostRouteWidenWireRule <value>] [-drouteSearchAndRepair {true|false}] [-drouteSignOffEffort <value>]
[05/16 19:05:55     14s]                         [-drouteUseMultiCutViaEffort <value>] [-envNumberFailLimit <value>] [-envNumberProcessor <value>]
[05/16 19:05:55     14s]                         [-envNumberWarningLimit <value>] [-envThirdPartyData {true|false}] [-hfrouteConstraintFile <value>]
[05/16 19:05:55     14s]                         [-hfrouteConstraintGroups <value>] [-hfrouteMatchReportFile <value>] [-hfrouteNumReserveLayers <value>]
[05/16 19:05:55     14s]                         [-hfrouteRemoveFloatingShield {true|false}] [-hfrouteSearchRepair <value>] [-hfrouteShieldTrimLength <value>]
[05/16 19:05:55     14s]                         [-routeAllowPinAsFeedthrough <value>] [-routeAntennaCellName <value>] [-routeAntennaPinLimit <value>]
[05/16 19:05:55     14s]                         [-routeBottomRoutingLayer <value>] [-routeConcurrentMinimizeViaCountEffort <value>] [-routeConnectToBump {true|false}]
[05/16 19:05:55     14s]                         [-routeDesignFixClockNets {true|false}] [-routeDesignRouteClockNetsFirst {true|false}]
[05/16 19:05:55     14s]                         [-routeEnableNdrSiLimitLength <value>] [-routeEnforceNdrOnSpecialNetWire <value>] [-routeExtraViaEnclosure <value>]
[05/16 19:05:55     14s]                         [-routeFixTopLayerAntenna {true|false}] [-routeHonorPowerDomain {true|false}]
[05/16 19:05:55     14s]                         [-routeIgnoreAntennaTopCellPin {true|false}] [-routeInsertAntennaDiode {true|false}]
[05/16 19:05:55     14s]                         [-routeInsertDiodeForClockNets {true|false}] [-routeRelaxedNdrSpacingToPGNets <value>]
[05/16 19:05:55     14s]                         [-routeReserveSpaceForMultiCut {true|false}] [-routeReverseDirection <value>] [-routeSelectedNetOnly {true|false}]
[05/16 19:05:55     14s]                         [-routeShieldCrosstieOffset <value>] [-routeStrictlyHonorNonDefaultRule <value>] [-routeStripeLayerRange <value>]
[05/16 19:05:55     14s]                         [-routeTieNetToShape <value>] [-routeTopRoutingLayer <value>] [-routeTrimPullBackDistanceFromBoundary <value>]
[05/16 19:05:55     14s]                         [-routeTrunkWithClusterTargetSize <value>] [-routeUnconnectedPorts {true|false}] [-routeWithEco {true|false}]
[05/16 19:05:55     14s]                         [-routeWithLithoDriven {true|false}] [-routeWithSiDriven {true|false}] [-routeWithTimingDriven {true|false}]
[05/16 19:05:55     14s]                         [-routeWithViaInPin <value>] [-routeWithViaInPinSingleMask {true|false}] [-routeWithViaOnlyForMacroCellPin <value>]
[05/16 19:05:55     14s]                         [-routeWithViaOnlyForStandardCellPin <value>]
[05/16 19:05:55     14s] 
[05/16 19:05:55     14s] -help                                     # Prints out the command usage
[05/16 19:05:55     14s] -reset                                    # Resets all or specified options to default value
[05/16 19:05:55     14s] -dbAdjustAutoViaWeight {true|false}       # adjust auto via weight for via swapping (bool, default=true)
[05/16 19:05:55     14s] -dbAllowInstanceOverlaps {true|false}     # don't do instance overlap check (bool, default=false)
[05/16 19:05:55     14s] -dbIgnoreFollowPinShape {true|false}      # Ignore follow pin via shapes (bool, default=false)
[05/16 19:05:55     14s] -dbProcessNode <value>                    # Specify the process node (string, default="")
[05/16 19:05:55     14s] -dbRcExtractionCorner <value>             # specific which RC extraction corner to use in routing (string, default="")
[05/16 19:05:55     14s] -dbSkipAnalog {true|false}                # skip routing nets or pins marked + USE ANALOG in the DEF file (bool, default=false)
[05/16 19:05:55     14s] -dbViaWeight <value>                      # set weight for vias (string, default="")
[05/16 19:05:55     14s] -drouteAntennaEcoListFile <value>         # set file name for antenna eco list (string, default="")
[05/16 19:05:55     14s] -drouteAutoStop {true|false}              # control whether Nanoroute continues routing if there are many violations (bool, default=true)
[05/16 19:05:55     14s] -drouteEndIteration <value>               # specify the last iteration pass in a detailed routing step (int, default=0)
[05/16 19:05:55     14s] -drouteFixAntenna {true|false}            # fix antenna violation by jumping metal layers (bool, default=true)
[05/16 19:05:55     14s] -drouteFixViaDensityViolationAfterViaSwap {true|false}
[05/16 19:05:55     14s]                                           # fix via density violations after via swapping
[05/16 19:05:55     14s]                                           # (bool, default=false)
[05/16 19:05:55     14s] -drouteMaskOnlyOnLayer <value>            # only defined mask can be used for the layers (string, default=false)
[05/16 19:05:55     14s] -drouteMinLengthForWireSpreading <value>
[05/16 19:05:55     14s]                                           # specify the min. length of a spreaded wire
[05/16 19:05:55     14s]                                           # (string, default=0)
[05/16 19:05:55     14s] -drouteMinLengthForWireWidening <value>   # specify the min. length of a widened wire (float, default=1)
[05/16 19:05:55     14s] -drouteMinSlackForWireOptimization <value>
[05/16 19:05:55     14s]                                           # specify the min slack for a net wire optimization
[05/16 19:05:55     14s]                                           # (float, default=0)
[05/16 19:05:55     14s] -drouteNoTaperInLayers <value>            # Specifies the range of the layer where taper is not allowed (string, default="")
[05/16 19:05:55     14s] -drouteNoTaperOnOutputPin <value>         # forbid wire tapering at output pin (ternary, default=false)
[05/16 19:05:55     14s] -drouteOnGridOnly <value>                 # route on grid only (string, default=none)
[05/16 19:05:55     14s] -droutePostRouteLithoRepair {true|false}
[05/16 19:05:55     14s]                                           # litho hotspot repair in post route stage
[05/16 19:05:55     14s]                                           # (bool, default=false)
[05/16 19:05:55     14s] -droutePostRouteSpreadWire <value>        # spread wire in post route stage (string, default=auto)
[05/16 19:05:55     14s] -droutePostRouteSwapVia <value>           # to enforce post route via swapping mode in detail route command. (string, default=false)
[05/16 19:05:55     14s] -droutePostRouteSwapViaPriority <value>   # Set net priority for via swapping based on timing (string, default=auto)
[05/16 19:05:55     14s] -droutePostRouteWidenWire <value>         # widen wire in post route stage (string, default=none)
[05/16 19:05:55     14s] -droutePostRouteWidenWireRule <value>     # specify the rule used to widen wire (string, default="")
[05/16 19:05:55     14s] -drouteSearchAndRepair {true|false}       # run search-and-repair step after the initial detailed routing (bool, default=true)
[05/16 19:05:55     14s] -drouteSignOffEffort <value>              # specify when to give up on irresolvable violations (string, default=high)
[05/16 19:05:55     14s] -drouteUseMultiCutViaEffort <value>       # specify the effort to use multi-cut via during routing (string, default=low)
[05/16 19:05:55     14s] -envNumberFailLimit <value>               # set limit for number of fails (int, default=0)
[05/16 19:05:55     14s] -envNumberProcessor <value>               # set the number of processors to be used in one workstation for multi-threading (int, default=1)
[05/16 19:05:55     14s] -envNumberWarningLimit <value>            # set limit for number of warnings (int, default=0)
[05/16 19:05:55     14s] -envThirdPartyData {true|false}           # Allow third party data as input (bool, default=false)
[05/16 19:05:55     14s] -hfrouteConstraintFile <value>            # specify constraint file name (string, default="")
[05/16 19:05:55     14s] -hfrouteConstraintGroups <value>          # only route specified constraint groups, legal values are {net match bus pair shield}, add "order" in
[05/16 19:05:55     14s]                                           # front to control route order (string, default="")
[05/16 19:05:55     14s] -hfrouteMatchReportFile <value>           # specify match report file name (string, default="")
[05/16 19:05:55     14s] -hfrouteNumReserveLayers <value>          # number of layers reserved for standard cell pin access (int, default=1)
[05/16 19:05:55     14s] -hfrouteRemoveFloatingShield {true|false}
[05/16 19:05:55     14s]                                           # remove floating shield segments for high frequency nets
[05/16 19:05:55     14s]                                           # (bool, default=false)
[05/16 19:05:55     14s] -hfrouteSearchRepair <value>              # run search and repair to remove violations, legal value is one of {false true only}
[05/16 19:05:55     14s]                                           # (string, default=false)
[05/16 19:05:55     14s] -hfrouteShieldTrimLength <value>          # specify minimum length of shielding wire to be kept (float, default=0)
[05/16 19:05:55     14s] -routeAllowPinAsFeedthrough <value>       # allow pin as feedthrough (string, default=true)
[05/16 19:05:55     14s] -routeAntennaCellName <value>             # specify the antenna diode cell names for antenna fixing (string, default="")
[05/16 19:05:55     14s] -routeAntennaPinLimit <value>             # ignore antenna check on a net with fanout greater than the pin limit (int, default=1000)
[05/16 19:05:55     14s] -routeBottomRoutingLayer <value>          # specify the lowest metal layer Nanoroute uses for routing (int, default=0)
[05/16 19:05:55     14s] -routeConcurrentMinimizeViaCountEffort <value>
[05/16 19:05:55     14s]                                           # specify the effort of concurrent via minimization
[05/16 19:05:55     14s]                                           # (string, default=medium)
[05/16 19:05:55     14s] -routeConnectToBump {true|false}          # connect to bumps in native NanoRoute in Innovus (bool, default=false)
[05/16 19:05:55     14s] -routeDesignFixClockNets {true|false}     # set clock nets routing status to fixed or routed (bool, default=false)
[05/16 19:05:55     14s] -routeDesignRouteClockNetsFirst {true|false}
[05/16 19:05:55     14s]                                           # route clock nets first (bool, default=true)
[05/16 19:05:55     14s] -routeEnableNdrSiLimitLength <value>      # use MAR wire length as NDR PRL requirement for metal spacing check (string, default=false)
[05/16 19:05:55     14s] -routeEnforceNdrOnSpecialNetWire <value>
[05/16 19:05:55     14s]                                           # enforce ndr rule on all special wire segments of specified nets (string, default=false)
[05/16 19:05:55     14s] -routeExtraViaEnclosure <value>           # specify an extra via enclosure to use when connecting to block pins and special net wires
[05/16 19:05:55     14s]                                           # (float, default=0)
[05/16 19:05:55     14s] -routeFixTopLayerAntenna {true|false}     # encourage global router not to use the top routing layer to fix antenna violations on nets without
[05/16 19:05:55     14s]                                           # diode protection (bool, default=true)
[05/16 19:05:55     14s] -routeHonorPowerDomain {true|false}       # honor power domain routing (bool, default=false)
[05/16 19:05:55     14s] -routeIgnoreAntennaTopCellPin {true|false}
[05/16 19:05:55     14s]                                           # ignore antenna check on block I/O pins
[05/16 19:05:55     14s]                                           # (bool, default=true)
[05/16 19:05:55     14s] -routeInsertAntennaDiode {true|false}     # insert antenna diode to fix antenna violation (bool, default=false)
[05/16 19:05:55     14s] -routeInsertDiodeForClockNets {true|false}
[05/16 19:05:55     14s]                                           # allow diode insertion on clock nets (bool, default=false)
[05/16 19:05:55     14s] -routeRelaxedNdrSpacingToPGNets <value>   # relax the spacing requirement from NDR spacing for the layers (string, default=none)
[05/16 19:05:55     14s] -routeReserveSpaceForMultiCut {true|false}
[05/16 19:05:55     14s]                                           # Reserves space to insert multicut vias in postroute stage. This option has to be set before routing.
[05/16 19:05:55     14s]                                           # After routing with this parameter specified, you can add double-cut vias or larger overhang vias by
[05/16 19:05:55     14s]                                           # using the "routeDesign -viaOpt" command. For examples, see routeDesign. (bool, default=false)
[05/16 19:05:55     14s] -routeReverseDirection <value>            # reverse routing direction in area: (lx ly ux uy [bot_lyr : top_lyr]) ... , top_lyr and bot_lyr could
[05/16 19:05:55     14s]                                           # be either layer name or layer routing id (string, default="")
[05/16 19:05:55     14s] -routeSelectedNetOnly {true|false}        # route selected net only (bool, default=false)
[05/16 19:05:55     14s] -routeShieldCrosstieOffset <value>        # Specifies the offset in terms of number of tracks for adding crossties. The default is 0 for all
[05/16 19:05:55     14s]                                           # layers. The syntax is 'layerName:numTrack1 layerName2:numTrack2... '. (string, default="")
[05/16 19:05:55     14s] -routeStrictlyHonorNonDefaultRule <value>
[05/16 19:05:55     14s]                                           # Strictly enforce non-default rules (string, default=false)
[05/16 19:05:55     14s] -routeStripeLayerRange <value>            # specify the target layer range of stripes for tie net connection (string, default="")
[05/16 19:05:55     14s] -routeTieNetToShape <value>               # specify the target special wire shapes or target instance pin for tie net connection: [auto stripe
[05/16 19:05:55     14s]                                           # ring powergroundpin] (string, default=auto)
[05/16 19:05:55     14s] -routeTopRoutingLayer <value>             # specify the highest metal layer Nanoroute uses for routing (int, default=0)
[05/16 19:05:55     14s] -routeTrimPullBackDistanceFromBoundary <value>
[05/16 19:05:55     14s]                                           # route_trim_pull_back_distance_from_boundary {<layer>:<value> ...} (string, default="")
[05/16 19:05:55     14s] -routeTrunkWithClusterTargetSize <value>
[05/16 19:05:55     14s]                                           # global control of trunk routing pattern for nets with TRUNK pattern attribute. 0: nets with TRUNK
[05/16 19:05:55     14s]                                           # pattern will be routed as Steiner tree; 1: default, nets will be routed as traditional trunk
[05/16 19:05:55     14s]                                           # pattern, i.e., each pin directly connects to SNET trunk separately; >1: define a proximate max
[05/16 19:05:55     14s]                                           # cluster size (in number of pins), and nets will be routed as fishbone style, i.e., several pins in a
[05/16 19:05:55     14s]                                           # column are clustered together, and then connects to SNET trunk. (int, default=1)
[05/16 19:05:55     14s] -routeUnconnectedPorts {true|false}       # Route unconnected ports (bool, default=false)
[05/16 19:05:55     14s] -routeWithEco {true|false}                # enable eco routing (bool, default=false)
[05/16 19:05:55     14s] -routeWithLithoDriven {true|false}        # enable the litho-driven routing (bool, default=false)
[05/16 19:05:55     14s] -routeWithSiDriven {true|false}           # enable si driven routing (bool, default=false)
[05/16 19:05:55     14s] -routeWithTimingDriven {true|false}       # enable timing driven routing (bool, default=false)
[05/16 19:05:55     14s] -routeWithViaInPin <value>                # enclose via in pin shape (string, default=false)
[05/16 19:05:55     14s] -routeWithViaInPinSingleMask {true|false}
[05/16 19:05:55     14s]                                           # enclose via in pin shape of a single mask
[05/16 19:05:55     14s]                                           # (bool, default=false)
[05/16 19:05:55     14s] -routeWithViaOnlyForMacroCellPin <value>
[05/16 19:05:55     14s]                                           # enclose via in pin shape for macro cell pins
[05/16 19:05:55     14s]                                           # (string, default=false)
[05/16 19:05:55     14s] -routeWithViaOnlyForStandardCellPin <value>
[05/16 19:05:55     14s]                                           # disable planar access to standard cell pins
[05/16 19:05:55     14s]                                           # (string, default=false)
[05/16 19:06:33     14s] <CMD> man timeDesign
[05/16 19:07:24     14s] invalid command name "qman"
[05/16 19:07:29     14s] <CMD> routeDesign -help
[05/16 19:07:29     14s] *** Message Summary: 0 warning(s), 0 error(s)
[05/16 19:07:29     14s] 
[05/16 19:07:29     14s] ### 
[05/16 19:07:29     14s] ###   Scalability Statistics
[05/16 19:07:29     14s] ### 
[05/16 19:07:29     14s] ### ------------------------+----------------+----------------+----------------+
[05/16 19:07:29     14s] ###   routeDesign           |        cpu time|    elapsed time|     scalability|
[05/16 19:07:29     14s] ### ------------------------+----------------+----------------+----------------+
[05/16 19:07:29     14s] ###   Entire Command        |        00:00:00|        00:00:00|             0.2|
[05/16 19:07:29     14s] ### ------------------------+----------------+----------------+----------------+
[05/16 19:07:29     14s] ### 
[05/16 19:07:29     14s] 
[05/16 19:07:29     14s] Usage: routeDesign [-help] [-hfClock] [-highFrequency] [-reclaim] [-timingFix] [[[-clockEco ] [-globalDetail | -global | -detail ] [-placementCheck | -noPlacementCheck ] [[ -trackOpt ] [-idealClock ]] [-viaOpt ] [-wireOpt ]] | [-passiveFill ]]
[05/16 19:07:29     14s] 
[05/16 19:07:29     14s] -help              # Prints out the command usage
[05/16 19:07:29     14s] -clockEco          # Do clock eco routing (bool, optional)
[05/16 19:07:29     14s] -detail            # Do detail route (bool, optional)
[05/16 19:07:29     14s] -global            # Do global route (bool, optional)
[05/16 19:07:29     14s] -globalDetail      # Do global detail route (bool, optional)
[05/16 19:07:29     14s] -hfClock           # Do high frequency clock route (bool, optional)
[05/16 19:07:29     14s] -highFrequency     # Do high frequency route (bool, optional)
[05/16 19:07:29     14s] -idealClock        # Use ideal clocks for optimization (bool, optional)
[05/16 19:07:29     14s] -noPlacementCheck  # Do not check placement (bool, optional)
[05/16 19:07:29     14s] -passiveFill       # Do passive fill (bool, optional)
[05/16 19:07:29     14s] -placementCheck    # Do check placement, abort if error (bool, optional)
[05/16 19:07:29     14s] -reclaim           # Use reclaim during optimization (bool, optional)
[05/16 19:07:29     14s] -timingFix         # Do timing optimization (bool, optional)
[05/16 19:07:29     14s] -trackOpt          # Do timing  optimization after track assignment (bool, optional)
[05/16 19:07:29     14s] -viaOpt            # Do via optimization (bool, optional)
[05/16 19:07:29     14s] -wireOpt           # Do wire optimization (bool, optional)
[05/16 19:07:29     14s] 
[05/16 19:07:29     14s] 
[05/16 19:08:29     15s] invalid command name "fixDrc"
[05/16 19:08:40     15s] <CMD> help *drc*
[05/16 19:08:40     15s] Multiple matches found:
[05/16 19:08:40     15s]       clearDrc
[05/16 19:08:40     15s]       get_verify_drc_mode
[05/16 19:08:40     15s]       loadDrc
[05/16 19:08:40     15s]       metric_capture_max_drc_markers
[05/16 19:08:40     15s]       route_fix_signoff_drc
[05/16 19:08:40     15s]       saveDrc
[05/16 19:08:40     15s]       set_verify_drc_mode
[05/16 19:08:40     15s]       verify_drc
[05/16 19:08:40     15s] 
[05/16 19:08:58     15s] <CMD> clearDrc -help
[05/16 19:08:58     15s] 
[05/16 19:08:58     15s] Usage: clearDrc [-help]
[05/16 19:08:58     15s] 
[05/16 19:08:58     15s] -help               # Prints out the command usage
[05/16 19:08:58     15s] 
[05/16 19:08:58     15s] 
[05/16 19:09:03     15s] <CMD> man clearDrc
[05/16 19:09:09     15s] <CMD> man clearDrc
[05/16 19:09:17     15s] <CMD> man ecoRoute
[05/16 19:09:57     15s] **INFO (INTERRUPT): One more Ctrl-C to exit Innovus ...
[05/16 19:09:57     15s] Innovus terminated by user interrupt.
[05/16 19:09:57     15s] 
[05/16 19:09:57     15s] *** Memory Usage v#1 (Current mem = 436.801M, initial mem = 183.621M) ***
[05/16 19:09:57     15s] *** Message Summary: 0 warning(s), 0 error(s)
[05/16 19:09:57     15s] 
[05/16 19:09:57     15s] --- Ending "Innovus" (totcpu=0:00:15.1, real=0:47:48, mem=436.8M) ---
